unit uDataBaseScripts;

interface

uses
  uDataBaseConnection;

type
  TDataBaseScripts = class
  private
    FScripts: TMyScript;
    FQuery: TMyQuery;

    function ColumnExists(ATable, AColumn: string): Boolean;

  public

    procedure EmptyAllTables;
    procedure InsertAdminUser;

    constructor Create;
    destructor Destroy; override;
  end;

implementation

uses
  uUser;

{ TDataBaseScripts }

function TDataBaseScripts.ColumnExists(ATable, AColumn: string): Boolean;
begin
  FQuery.SQL.Clear;
  FQuery.SQL.Add('SELECT COUNT(*) AS CNTREC FROM pragma_table_info('':TABLE_NAME'') WHERE name='':COLUMN'')');
  FQuery.ParamByName('TABLE_NAME').AsString := ATable;
  FQuery.ParamByName('COLUMN').AsString := AColumn;
  FQuery.Open;

  Result := not FQuery.IsEmpty;
end;

constructor TDataBaseScripts.Create;
begin
  FScripts := TMyScript.Create(nil);
  FQuery := TMyQuery.Create(nil);
end;

destructor TDataBaseScripts.Destroy;
begin
  FQuery.Free;
  FScripts.Free;
  inherited;
end;

procedure TDataBaseScripts.EmptyAllTables;
begin
  FScripts.SQLScripts.Clear;
  FScripts.SQLScripts.Add;

  FScripts.SQLScripts[0].SQL.Add('DELETE FROM MOVEMENT;');

  FScripts.SQLScripts[0].SQL.Add('DELETE FROM FORM_PAYMENT;');
  FScripts.SQLScripts[0].SQL.Add('DELETE FROM PERSON;');
  FScripts.SQLScripts[0].SQL.Add('DELETE FROM SUB_CATEGORY;');

  FScripts.SQLScripts[0].SQL.Add('DELETE FROM USER;');
  FScripts.SQLScripts[0].SQL.Add('DELETE FROM TYPE_PAYMENT;');
  FScripts.SQLScripts[0].SQL.Add('DELETE FROM CATEGORY;');


  FScripts.ExecuteAll;
end;

procedure TDataBaseScripts.InsertAdminUser;
var
  lUser: TUser;
begin
  lUser := TUser.Create;
  try
    lUser.Clear;
    lUser.Name := 'Administrador';
    lUser.Login := 'admin';
    lUser.Password := 'admin';
    lUser.InsertRegister;
  finally
    lUser.Free;
  end;
end;

end.
