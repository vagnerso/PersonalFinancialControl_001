unit fMovement;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, fBase, Vcl.ExtCtrls, Vcl.ComCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.Imaging.pngimage, Vcl.StdCtrls, fGeneralSearch, uEnumTypes,
  FireDAC.Comp.Client;

type
  TfrmMovement = class(TfrmBase)
    pnlTitle: TPanel;
    pnlBottom: TPanel;
    pgcNavigator: TPageControl;
    tabDescription: TTabSheet;
    pnlDescription: TPanel;
    edtDescription: TEdit;
    Label1: TLabel;
    edtFormPayment: TEdit;
    imButtonClearEdtFormPayment: TImage;
    imButtonSearchFormPayment: TImage;
    tabInstallments: TTabSheet;
    pnlInstallments: TPanel;
    Label2: TLabel;
    Label3: TLabel;
    edtNumberInstallments: TEdit;
    pnlButtonInstallmentsGenerate: TPanel;
    Panel1: TPanel;
    Panel2: TPanel;
    grInstallments: TDBGrid;
    dtsInstallments: TDataSource;
    Label4: TLabel;
    edtInstallmentesValue: TEdit;
    Label5: TLabel;
    imButtonClearEdtProvider: TImage;
    imButtonSearchProvider: TImage;
    edtProvider: TEdit;
    Label6: TLabel;
    edtSubCategory: TEdit;
    imButtonClearEdtSubCategory: TImage;
    imButtonSearchSubCategory: TImage;
    procedure imButtonSearchFormPaymentClick(Sender: TObject);
    procedure edtNumberInstallmentsClick(Sender: TObject);
    procedure pnlButtonInstallmentsGenerateClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Panel2Click(Sender: TObject);
    procedure Panel1Click(Sender: TObject);
    procedure imButtonSearchProviderClick(Sender: TObject);
    procedure imButtonSearchSubCategoryClick(Sender: TObject);
  private
    FMemInstallmentsList: TFDMemTable;
    FTypeMovement: TTypeMovement;

    procedure InstallmentsGenerate;

    { Private declarations }
  public
    { Public declarations }
    property TypeMovement: TTypeMovement read FTypeMovement write FTypeMovement;
  end;

var
  frmMovement: TfrmMovement;

implementation

{$R *.dfm}

procedure TfrmMovement.edtNumberInstallmentsClick(Sender: TObject);
var
  numberInstallments: Integer;
begin
  inherited;
  numberInstallments := StrToIntDef(edtNumberInstallments.Text, 1);

  if numberInstallments > 1 then
  begin
    pnlButtonInstallmentsGenerate.Visible := True;
  end
  else
  begin
    pnlButtonInstallmentsGenerate.Visible := False;
  end;

end;

procedure TfrmMovement.FormCreate(Sender: TObject);
begin
  inherited;
  FMemInstallmentsList := TFDMemTable.Create(Self);
  FMemInstallmentsList.FieldDefs.Add('id', ftInteger);
  FMemInstallmentsList.FieldDefs.Add('name', ftString, 300);
  FMemInstallmentsList.FieldDefs.Add('valor', ftFloat);
  FMemInstallmentsList.CreateDataSet;
end;

procedure TfrmMovement.FormShow(Sender: TObject);
begin
  inherited;
  pgcNavigator.ActivePage := tabDescription;
end;

procedure TfrmMovement.imButtonSearchProviderClick(Sender: TObject);
var
  frmGeneralSearch : TfrmGeneralSearch;
begin
  inherited;

  frmGeneralSearch := TfrmGeneralSearch.Create(nil);
  try
    frmGeneralSearch.SearchEntityType := setProvider;
    frmGeneralSearch.ShowModal;
    edtProvider.Text := frmGeneralSearch.Provider.Name;
    //FRegisterObject.Category.Id := frmGeneralSearch.Category.Id;
  finally
    frmGeneralSearch.Free;
  end;
end;

procedure TfrmMovement.imButtonSearchSubCategoryClick(Sender: TObject);
var
  frmGeneralSearch : TfrmGeneralSearch;
begin
  inherited;

  frmGeneralSearch := TfrmGeneralSearch.Create(nil);
  try
    frmGeneralSearch.SearchEntityType := setSubCategory;
    frmGeneralSearch.ShowModal;
    edtSubCategory.Text := frmGeneralSearch.SubCategory.Name;

  finally
    frmGeneralSearch.Free;
  end;
end;

procedure TfrmMovement.imButtonSearchFormPaymentClick(Sender: TObject);
var
  frmGeneralSearch : TfrmGeneralSearch;
begin
  inherited;

  frmGeneralSearch := TfrmGeneralSearch.Create(nil);
  try
    frmGeneralSearch.SearchEntityType := setFormPayment;
    frmGeneralSearch.ShowModal;
    edtFormPayment.Text := frmGeneralSearch.FormPayment.Name;

  finally
    frmGeneralSearch.Free;
  end;

end;

procedure TfrmMovement.InstallmentsGenerate;
var
  numberInstallments: Integer;
  I: Integer;

begin

  numberInstallments := StrToIntDef(edtNumberInstallments.Text, 1);

  dtsInstallments.DataSet := FMemInstallmentsList;
  FMemInstallmentsList.EmptyDataSet;

  for I := 0 to numberInstallments - 1 do
  begin
    FMemInstallmentsList.Append;
    FMemInstallmentsList.FieldByName('id').AsInteger := i;
    FMemInstallmentsList.FieldByName('name').AsString := edtDescription.Text;
    FMemInstallmentsList.FieldByName('valor').AsFloat := StrToFloat(edtInstallmentesValue.Text);
    FMemInstallmentsList.Post;
  end;

  grInstallments.Columns[0].Width := 80;
  grInstallments.Columns[1].Width := 300;
  grInstallments.Columns[2].Width := 140;

  pgcNavigator.ActivePage := tabInstallments;

end;

procedure TfrmMovement.Panel1Click(Sender: TObject);
begin
  inherited;
  ModalResult := mrOk;
end;

procedure TfrmMovement.Panel2Click(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TfrmMovement.pnlButtonInstallmentsGenerateClick(Sender: TObject);
begin
  inherited;
  InstallmentsGenerate;
end;

end.
