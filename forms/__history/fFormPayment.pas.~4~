unit fFormPayment;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  fMasterRegister,
  Data.DB,
  Vcl.Menus,
  Vcl.StdCtrls,
  Vcl.Imaging.pngimage,
  Vcl.ExtCtrls,
  Vcl.Grids,
  Vcl.DBGrids,
  Vcl.ComCtrls,
  uFormPayment,
  uEnumTypes,
  uFunctions;

type
  TfrmFormPayment = class(TfrmMasterRegister)
    lb3: TLabel;
    edtName: TEdit;
    lb2: TLabel;
    cbxTypePayment: TComboBox;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    FRegisterObject: TFormPayment;
    procedure EnabledRegister;
    procedure DisabledRegister;
    { Private declarations }
  public
    { Public declarations }
    procedure InsertRegister; override;
    procedure EditRegister; override;
    procedure DeleteRegister; override;
    procedure PrintRegister; override;
    procedure CloseForm; override;
    procedure SearchExecute; override;
    procedure SaveRegister; override;
    procedure CancelRegister; override;
    procedure ClearFields;
    procedure GetTypePaymentList;

    property RegisterObject: TFormPayment read FRegisterObject write FRegisterObject;
  end;

var
  frmFormPayment: TfrmFormPayment;

implementation

{$R *.dfm}

{ TfrmFormPayment }

procedure TfrmFormPayment.CancelRegister;
begin
  inherited;
  DisabledRegister;
end;

procedure TfrmFormPayment.ClearFields;
begin
  TFunctions.clearFormFields(Self);
end;

procedure TfrmFormPayment.CloseForm;
begin
  inherited;
  // save log
  Close;
end;

procedure TfrmFormPayment.DeleteRegister;
begin
  inherited;
  if Application.MessageBox(PChar('Deseja realmente excluir o registro?'),
    PChar(Application.Title), MB_USEGLYPHCHARS + MB_DEFBUTTON2) = ID_NO then
  begin
    Abort;
  end;

  FRegisterObject.UniqueId := dtsSearch.DataSet.FieldByName('UNIQUE_ID').AsString;
  FRegisterObject.DeleteRegister;
  SearchExecute;

end;

procedure TfrmFormPayment.DisabledRegister;
begin
  pgcSearch.Visible := True;
  pnlMain.Visible := True;
  tabGrid.TabVisible := True;
  tabRegister.TabVisible := False;
  tabRegisterBasic.TabVisible := False;
end;

procedure TfrmFormPayment.EditRegister;
begin
  inherited;
  FOperationType := otUpdate;
  EnabledRegister;
  FRegisterObject.Clear;
  edtName.Text := dtsSearch.DataSet.FieldByName('Nome').AsString;
  edtName.SetFocus;

end;

procedure TfrmFormPayment.EnabledRegister;
begin
  pgcSearch.Visible := False;
  pnlMain.Visible := False;
  tabGrid.TabVisible := False;
  tabRegister.TabVisible := True;
  tabRegisterBasic.TabVisible := True;
  tabRegisterBasic.Show;
end;

procedure TfrmFormPayment.FormCreate(Sender: TObject);
begin
  inherited;
  FRegisterObject := TFormPayment.Create;
end;

procedure TfrmFormPayment.FormDestroy(Sender: TObject);
begin
  inherited;
  FRegisterObject.Free;
end;

procedure TfrmFormPayment.FormShow(Sender: TObject);
begin
  FTitleForm := 'Formas de Pagamento';
  inherited;
  tabGrid.TabVisible := True;
  tabRegister.TabVisible := False;
  tabRegisterBasic.TabVisible := False;
  SearchExecute;
end;

procedure TfrmFormPayment.GetTypePaymentList;
begin
  cbxTypePayment.Items.Clear;
  TabelaProdutos.Close;
  TabelaProdutos.Open;
  TabelaProdutos.First;
  while not TabelaProdutos.Eof do
  begin
    cbxTypePayment.Items.AddObject(TabelaProdutosNOME.AsString,TObject(TabelaProdutosCODIGO.AsInteger));
    TabelaProdutos.Next;
  end;
end;

procedure TfrmFormPayment.InsertRegister;
begin
  inherited;
  FOperationType := otInsert;
  EnabledRegister;
  FRegisterObject.Clear;
  ClearFields;
  edtName.SetFocus;

end;

procedure TfrmFormPayment.PrintRegister;
begin
  inherited;

end;

procedure TfrmFormPayment.SaveRegister;
begin
  inherited;
  FRegisterObject.Name := edtName.Text;

  case FOperationType of
    otInsert:
    begin
      FRegisterObject.InsertRegister;
    end;
    otUpdate:
    begin
      FRegisterObject.UniqueId := dtsSearch.DataSet.FieldByName('UNIQUE_ID').AsString;
      FRegisterObject.UpdateRegister;
    end;
  end;
  DisabledRegister;
  SearchExecute;

end;

procedure TfrmFormPayment.SearchExecute;
begin
  inherited;
  FRegisterObject.SearchFiltersCustomized.ValueSearch := edtSearch.Text;
  FRegisterObject.Search(FQuerySearch);

  grdSearch.Columns[0].Visible := False;
  grdSearch.Columns[1].Width := 400;


end;

end.
